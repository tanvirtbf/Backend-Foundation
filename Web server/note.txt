key points : 


1. web server holo ekta software jeta server e thake . server e thake bolte client jekhane request kore setaii server or web server and sei web server sei request er against e response dey . web server http protocol use kore thake . tai amra bolte pari web server holo sei server jeta specially browser er jonno banano . web server mainly text, image , audio , video serve kore thake 

ЁЯМР Web Server (ржУрзЯрзЗржм рж╕рж╛рж░рзНржнрж╛рж░) ржХрзА?

ЁЯФ╣ Web Server рж╣рж▓рзЛ ржПржоржи ржПржХржЯрж┐ software (рж╕ржлржЯржУрзЯрзНржпрж╛рж░) ржпрж╛ server ржХржорзНржкрж┐ржЙржЯрж╛рж░рзЗ ржЗржирж╕рзНржЯрж▓ ржХрж░рж╛ ржерж╛ржХрзЗ ржПржмржВ ржХрзНрж▓рж╛рзЯрзЗржирзНржЯ (ржпрзЗржоржи ржмрзНрж░рж╛ржЙржЬрж╛рж░) ржерзЗржХрзЗ ржЖрж╕рж╛ HTTP request ржЧрзНрж░рж╣ржг ржХрж░рзЗ ржПржмржВ рждрж╛рж░ ржЙржкржпрзБржХрзНржд HTTP response ржкрж╛ржарж╛рзЯред

ЁЯФ╣ ржПржЯрж┐ HTTP ржмрж╛ HTTPS ржкрзНрж░рзЛржЯрзЛржХрж▓ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ client ржПржмржВ server-ржПрж░ ржоржзрзНржпрзЗ ржпрзЛржЧрж╛ржпрзЛржЧ рж╕рзНржерж╛ржкржи ржХрж░рзЗред

ЁЯФ╣ рж╕рж╣ржЬржнрж╛ржмрзЗ ржмрж▓рж▓рзЗ тАФ ржпржЦржи ржЖржорж░рж╛ ржХрзЛржирзЛ ржУрзЯрзЗржмрж╕рж╛ржЗржЯрзЗ URL рж▓рж┐ржЦрзЗ search ржХрж░рж┐, рждржЦржи browser рж╕рзЗржЗ URL ржЕржирзБржпрж╛рзЯрзА web server-ржХрзЗ request ржкрж╛ржарж╛рзЯ, ржПржмржВ web server рж╕рзЗржЗ ржкрзЗржЬрзЗрж░ data (HTML, CSS, JS, image, video ржЗрждрзНржпрж╛ржжрж┐) ржкрж╛ржарж┐рзЯрзЗ ржжрзЗрзЯред

ЁЯФ╣ Web Server ржорзВрж▓ржд browser-ржПрж░ ржЬржирзНржп ржмрж┐рж╢рзЗрж╖ржнрж╛ржмрзЗ ржбрж┐ржЬрж╛ржЗржи ржХрж░рж╛ software, ржпрж╛рж░ ржХрж╛ржЬ рж╣ржЪрзНржЫрзЗ ржУрзЯрзЗржм ржХржиржЯрзЗржирзНржЯ ржирж┐рж░рж╛ржкржж ржУ ржжрзНрж░рзБрждржнрж╛ржмрзЗ рж╕рж╛рж░рзНржн ржХрж░рж╛ред

ЁЯФ╣ ржПржЯрж┐ рж╕рж╛ржзрж╛рж░ржгржд text, image, audio, video, HTML file ржЗрждрзНржпрж╛ржжрж┐ content serve ржХрж░рзЗ ржерж╛ржХрзЗред

ЁЯФ╣ ржЬржиржкрзНрж░рж┐рзЯ ржХрж┐ржЫрзБ Web Server ржЙржжрж╛рж╣рж░ржг:

Apache HTTP Server

Nginx

Microsoft IIS (Internet Information Services)

LiteSpeed Web Server

ЁЯФ╣ Web Server static content serve ржХрж░рждрзЗ ржкрж╛рж░рзЗ, ржЖржмрж╛рж░ dynamic content serve ржХрж░рж╛рж░ ржЬржирзНржп backend server-ржПрж░ (ржпрзЗржоржи Node.js, PHP ржЗрждрзНржпрж╛ржжрж┐) рж╕рж╛ржерзЗ ржХрж╛ржЬ ржХрж░рзЗред




----------------------------------------------------- 1 -----------------------------------------------





2. server 2 prokar . Static Server and Dynamic Server 
ЁЯз▒ 1. Static Server:

Static Server ржПржоржи ржПржХ ржзрж░ржирзЗрж░ рж╕рж╛рж░рзНржнрж╛рж░ ржпрж╛ fixed (ржЕржкрж░рж┐ржмрж░рзНрждржирж╢рзАрж▓) ржлрж╛ржЗрж▓ ржпрзЗржоржи HTML, CSS, JS, Image ржЗрждрзНржпрж╛ржжрж┐ рж╕рж░рж╛рж╕рж░рж┐ ржХрзНрж▓рж╛рзЯрзЗржирзНржЯржХрзЗ ржкрж╛ржарж╛рзЯ тАФ ржХрзЛржирзЛ ржкрзНрж░ржХрж╛рж░ processing ржЫрж╛рзЬрж╛ржЗред
ржПржЗ ржзрж░ржирзЗрж░ рж╕рж╛рж░рзНржнрж╛рж░рзЗ backend logic ржмрж╛ database ржерж╛ржХрзЗ ржирж╛ред

Example:
GitHub Pages
Netlify
Vercel (ржпржЦржи рж╢рзБржзрзБ static site deploy ржХрж░рж╛ рж╣рзЯ)
Apache ржмрж╛ Nginx server ржжрж┐рзЯрзЗ host ржХрж░рж╛ simple HTML site
Static server ржорзВрж▓ржд тАЬread-onlyтАЭ ржУрзЯрзЗржмрж╕рж╛ржЗржЯрзЗрж░ ржЬржирзНржп ржЖржжрж░рзНрж╢ред

2. Dynamic Server:
Dynamic Server ржПржоржи ржПржХ ржзрж░ржирзЗрж░ рж╕рж╛рж░рзНржнрж╛рж░ ржпрж╛ user request ржЕржирзБржпрж╛рзЯрзА real-time ржП data generate ржХрж░рзЗ ржкрж╛ржарж╛рзЯред ржПржЦрж╛ржирзЗ backend code (ржпрзЗржоржи Node.js, PHP, Python ржЗрждрзНржпрж╛ржжрж┐) ржПржмржВ database (ржпрзЗржоржи MySQL, MongoDB) ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣рзЯред

Example:
Facebook, YouTube, Amazo
Node.js + Express server
PHP + Laravel server
Dynamic server ржмрзНржпржмрж╣рж╛рж░ ржХрж░рж╛ рж╣рзЯ ржпрзЗржЦрж╛ржирзЗ user interaction, login system, database data ржкрзНрж░ржжрж░рзНрж╢ржи ржЗрждрзНржпрж╛ржжрж┐ ржкрзНрж░рзЯрзЛржЬржиред

рж╕ржВржХрзНрж╖рзЗржкрзЗ:
Static Server = Fixed content serve ржХрж░рзЗ ЁЯз╛
Dynamic Server = User ржЕржирзБржпрж╛рзЯрзА content change ржХрж░рзЗ тЪб